user-stories.component.ts
ts
Copy
Edit
import { Component } from '@angular/core';
import { FormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';

type Status = 'PENDING' | 'VOTING' | 'VOTED';

interface UserStory {
  id: string;
  description: string;
  status: Status;
}

@Component({
  selector: 'app-user-stories',
  standalone: true,
  templateUrl: './user-stories.component.html',
  styleUrls: ['./user-stories.component.css'],
  imports: [CommonModule, ReactiveFormsModule]
})
export class UserStoriesComponent {
  storyForm = this.fb.group({
    id: ['', Validators.required],
    description: ['', Validators.required],
  });

  userStories: UserStory[] = [
    { id: 'US-100', description: 'Login flow', status: 'PENDING' },
    { id: 'US-101', description: 'Email verification', status: 'VOTED' },
  ];

  constructor(private fb: FormBuilder) {}

  addStory() {
    if (this.storyForm.invalid) return;

    const { id, description } = this.storyForm.value;
    this.userStories.push({
      id: id!,
      description: description!,
      status: 'PENDING',
    });
    this.storyForm.reset();
  }

  deleteStory(storyId: string) {
    const index = this.userStories.findIndex(s => s.id === storyId && s.status === 'PENDING');
    if (index !== -1) {
      this.userStories.splice(index, 1);
    }
  }
}
📄 2. user-stories.component.html
html
Copy
Edit
<div class="container">
  <h2>User Stories</h2>

  <form [formGroup]="storyForm" (ngSubmit)="addStory()" class="story-form">
    <input formControlName="id" placeholder="Story ID" />
    <input formControlName="description" placeholder="Description" />
    <button type="submit" [disabled]="storyForm.invalid">Add Story</button>
  </form>

  <ul class="story-list">
    <li *ngFor="let story of userStories" class="story-item">
      <div>
        <strong>{{ story.id }}</strong>: {{ story.description }}
        <span class="status" [ngClass]="story.status">{{ story.status }}</span>
      </div>
      <button *ngIf="story.status === 'PENDING'" (click)="deleteStory(story.id)">🗑️ Delete</button>
    </li>
  </ul>
</div>
🎨 3. user-stories.component.css
css
Copy
Edit
.container {
  max-width: 600px;
  margin: auto;
  padding: 1rem;
  background: #f5f5f5;
  border-radius: 8px;
}

.story-form {
  display: flex;
  gap: 0.5rem;
  margin-bottom: 1rem;
}

.story-form input {
  flex: 1;
  padding: 0.5rem;
}

.story-form button {
  padding: 0.5rem 1rem;
}

.story-list {
  list-style: none;
  padding: 0;
}

.story-item {
  display: flex;
  justify-content: space-between;
  background: white;
  margin-bottom: 0.5rem;
  padding: 0.5rem;
  border-radius: 4px;
}

.status {
  margin-left: 1rem;
  font-size: 0.8rem;
  padding: 0.2rem 0.5rem;
  border-radius: 4px;
  color: white;
}

.status.PENDING {
  background: orange;
}

.status.VOTING {
  background: dodgerblue;
}

.status.VOTED {
  background: green;
}
🧪 Test Coverage (Optional)